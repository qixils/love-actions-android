name: Love actions for Android
description: Android CI/CD for LÖVE based games
branding:
  icon: "heart"
  color: "green"
inputs:
  app-name:
    description: |
      App display name
      Would be used in app/src/main/AndroidManifest.xml
    required: false
    default: "LÖVE for Android"
  bundle-id:
    description: |
      App bundle id
      Would be used in app/build.gradle
    required: false
    default: "org.love2d.android"
  resource-path:
    description: |
      Path to the resources folder
      Would copy all contents to app/src/main/res
      Top folder not included
    required: true
  icon-specifier:
    description: |
      Icon specifier
      Would be used in app/src/main/AndroidManifest.xml
    required: false
    default: "@drawable/love"
  love-ref:
    description: |
      LÖVE git ref
      Could be commit hash, tags or branch name
    required: false
    default: "11.4"
  love-patch:
    description: |
      Git patch file path for the LÖVE repo
      The patch must start from `love-ref`
      You can use `git diff` to get the patch file
    required: false
  love-package:
    description: |
      Love package
      Would be added to app/src/embed/assets/
    required: false
    default: "./game.love"
  libs-path:
    description: |
      Path to the libs folder
      Top folder not included
    required: false
  extra-assets:
    description: |
      List of folder & file paths to be added to app/src/embed/assets/
      Don't need global quotes, separated by spaces
      Looks like: ./assets/ ./logics/ ./main.lua ./config.lua
    required: false
  product-name:
    description: |
      Base name of the package
      Would be used to rename products
    required: false
    default: "love-app"
  version-string:
    description: |
      App version string
      Use 3 numbers seperated by dots
      Looks like 3.2.1
    required: false
    default: "11.4"
  version-code:
    description: |
      App version code
      One number, usually the same as version string without dots
      Looks like 321
    required: false
    default: "30"
  output-folder:
    description: |
      Packages output folder
      All packages would be placed here
    required: false
    default: "./build"
  keystore-alias:
    description: |
      Keystore alias
      Would be used to sign the app
    required: false
  keystore-base64:
    description: |
      Keystore base64 content
      Would be used to sign the app
    required: false
  keystore-key-password:
    description: |
      Keystore key password
      Would be used to sign the app
    required: false
  keystore-store-password:
    description: |
      Keystore store password
      Would be used to sign the app
      Usually the same as keystore-key-password
    required: false
outputs:
  package-paths:
    description: |
      Paths to the built packages in a bash list
      Would be paths relative to repository root, separated by spaces
      Looks like: ./build/game.apk ./build/game.abb
    value: ${{ steps.gather-packages.outputs.package-paths }}
runs:
  using: composite
  steps:
    - name: Create directories
      shell: bash
      run: |
        mkdir -p ./love-actions-android/
        mkdir -p ${{ inputs.output-folder }}
    - name: Get Java
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: "11"
    - name: Checkout love-android
      uses: actions/checkout@v3
      with:
        path: ./love-actions-android/love-android
        ref: ${{ inputs.love-ref }}
        repository: love2d/love-android
        submodules: recursive
    - name: Apply love-android patch
      if: "${{ inputs.love-patch != '' }}"
      shell: bash
      run: |
        cp ${{ inputs.love-patch }} ./love-actions-android/love-android/love.patch
        cd ./love-actions-android/love-android
        git apply ./love.patch
    - name: Copy resources
      shell: bash
      run: |
        cp -r -f ${{ inputs.resource-path }}/* ./love-actions-android/love-android/app/src/main/res/
    - name: Extract love package
      shell: bash
      run: |
        7z x ${{ inputs.love-package }} -o./love-actions-android/love-android/app/src/embed/assets/
    - name: Add libs
      if: "${{ inputs.libs-path != '' }}"
      shell: bash
      run: |
        mkdir -p ./love-actions-android/love-android/app/libs/
        cp -r -f ${{ inputs.libs-path }}/* ./love-actions-android/love-android/love/src/jni/lua-modules/
    - name: Add extra assets
      if: "${{ inputs.extra-assets != '' }}"
      shell: bash
      run: |
        cp -r -f ${{ inputs.extra-assets }} ./love-actions-android/love-android/app/src/embed/assets/
    - name: Update android information
      shell: python
      run: |
        with open("./love-actions-android/love-android/app/src/main/AndroidManifest.xml", "r+", encoding="utf-8") as file:
          data = file.read()
          data = data\
            .replace("OpenGL ES 2.0", "OpenGL ES 3.0")\
            .replace("0x00020000", "0x00030000")\
            .replace("LÖVE for Android", "${{ inputs.app-name }}")\
            .replace("@drawable/love", "${{ inputs.icon-specifier }}")
          file.seek(0)
          file.truncate()
          file.write(data)
        with open("./love-actions-android/love-android/app/build.gradle", "r+", encoding="utf-8") as file:
          data = file.read()
          data = data\
            .replace("org.love2d.android", "${{ inputs.bundle-id }}")\
            .replace("30", "${{ inputs.version-code }}")\
            .replace("11.4", "${{ inputs.version-string }}")
          insert_pos = data.find("\n", data.find("proguardFiles")) + 1
          data = data[:insert_pos] + "            signingConfig signingConfigs.release\n" + data[insert_pos:]
          insert_pos = data.find("buildTypes") - 4
          data = data[:insert_pos] + "    signingConfigs {\n" \
                                     "        release {\n" \
                                     "            storeFile file('./android.keystore')\n" \
                                     "            keyAlias '${{ inputs.keystore-alias }}'\n" \
                                     "            keyPassword '${{ inputs.keystore-key-password }}'\n" \
                                     "            storePassword '${{ inputs.keystore-store-password }}'\n" \
                                     "        }\n" \
                                     "    }\n" + data[insert_pos:]
          file.seek(0)
          file.truncate()
          file.write(data)
    - name: Cache gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
        restore-keys: gradle-
    - name: Cache NDK
      uses: actions/cache@v3
      with:
        path: /usr/local/lib/android/sdk/ndk/21.3.6528147
        key: ndk-21.3.6528147
    - name: Cache Builds
      uses: actions/cache@v3
      with:
        path: |
          ./love-actions-android/love-android/.gradle
          ./love-actions-android/love-android/love/build
          ./love-actions-android/love-android/app/build
        key: build-love-11.4
    - name: Build package (Debug)
      shell: bash
      run: |
        cd ./love-actions-android/love-android/
        chmod +x ./gradlew
        ./gradlew assembleEmbedRecordDebug
    - name: Rename package (Debug)
      shell: bash
      run: |
        mv ./love-actions-android/love-android/app/build/outputs/apk/embedRecord/debug/app-embed-record-debug.apk ${{ inputs.output-folder }}/${{ inputs.product-name }}-debug.apk
    - name: Build package (Release)
      if: "${{ inputs.keystore-alias != '' && inputs.keystore-base64 != '' && inputs.keystore-key-password != '' && inputs.keystore-store-password != '' }}"
      shell: bash
      run: |
        echo "${{ inputs.keystore-base64 }}" | base64 -d > ./love-actions-android/love-android/app/android.keystore
        cd ./love-actions-android/love-android/
        chmod +x ./gradlew
        ./gradlew assembleEmbedRecordRelease
    - name: Rename package (Release)
      if: "${{ inputs.keystore-alias != '' && inputs.keystore-base64 != '' && inputs.keystore-key-password != '' && inputs.keystore-store-password != '' }}"
      shell: bash
      run: mv ./love-actions-android/love-android/app/build/outputs/apk/embedRecord/release/app-embed-record-release.apk ${{ inputs.output-folder }}/${{ inputs.product-name }}-release.apk
    - name: Gather packages in output folder
      id: gather-packages
      shell: bash
      run: |
        echo ::set-output name=package-paths::$(ls -d ${{ inputs.output-folder }}/*)
    - name: Cleanup
      shell: bash
      run: |
        rm -rf ./love-actions-android/
